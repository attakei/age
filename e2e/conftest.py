"""Common test contexts."""

from pathlib import Path
from subprocess import PIPE, CompletedProcess, run
from typing import Callable, Tuple

import pytest

project_root = Path(__file__).parent.parent


def pytest_sessionstart(session):
    """Generate age binary for testing."""
    print("Now building binary from Nimble ... ", end="")
    proc = run(["nimble", "build"], stdout=PIPE, stderr=PIPE, cwd=project_root)
    if proc.returncode != 0:
        print("Failed!!")
        pytest.exit(1)
    print(" OK!")


@pytest.fixture
def root() -> Path:
    """Path-object of project root."""
    return project_root


@pytest.fixture
def target_bin(root: Path) -> str:
    """Full-path of binary generated by ``cargo build``."""
    bin_path = root / "dist" / "age"
    return str(bin_path.resolve())


@pytest.fixture
def cmd(
    target_bin: str, tmp_path: Path
) -> Callable[[Tuple[..., str]], CompletedProcess]:
    """Shortcut to run command on subprocess."""

    def _cmd(*args, **kwargs) -> CompletedProcess:
        kwargs.setdefault("cwd", tmp_path)
        return run(
            [target_bin] + list(args),
            stdout=PIPE,
            stderr=PIPE,
            text=True,
            **kwargs,
        )

    return _cmd
