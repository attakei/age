name: 'Run CI jobs'

on:
  push:
    branches:
      - '**'
    tags-ignore:
      - '**'
  pull_request:
  workflow_dispatch:

env:
  TASK_X_REMOTE_TASKFILES: 1

jobs:
  lint:
    runs-on: 'ubuntu-latest'
    steps:
      - uses: 'actions/checkout@v4'
      - uses: jdx/mise-action@v2
      - name: 'Cache Nim resources'
        id: cache_nim
        uses: actions/cache@v4
        with:
          path: |
            ~/.choosenim
            ~/.nimble
          key: 'nimcaches_ubuntu-latest_${{ matrix.nim-version }}'
      - uses: jiro4989/setup-nim-action@v2
      - name: Set up workspace
        run: |
          task --yes setup
      - name: Lint by lefthook
        run: |
          lefthook run pre-commit --all-files
  test:
    needs: ['lint']
    runs-on: 'ubuntu-latest'
    strategy:
      matrix:
        nim-version:
          - '2.0.0'
          - '2.0.14'
          - '2.2.0'
          - '2.2.2'
    steps:
      - uses: 'actions/checkout@v4'
      - name: 'Install libraries'
        run: |
          sudo apt update
          sudo apt install -y libpcre3
      - name: 'Cache Nim resources'
        id: cache_nim
        uses: actions/cache@v4
        with:
          path: |
            ~/.choosenim
            ~/.nimble
          key: 'nimcaches_ubuntu-latest_${{ matrix.nim-version }}'
      - uses: jiro4989/setup-nim-action@v2
        with:
          nim-version: '${{ matrix.nim-version }}'
      - name: 'Run unittests'
        run: |
          nimble test -Y
  e2e:
    needs: ['lint']
    runs-on: '${{ matrix.os }}'
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
        nim-version:
          - '2.0.0'
          - '2.2.2'
    steps:
      - uses: 'actions/checkout@v4'
      - name: 'Install libraries'
        run: |
          sudo apt update
          sudo apt install -y libpcre3
        if: ${{ matrix.os == 'ubuntu-latest' }}
      - name: 'Cache Nim resources'
        id: cache_nim
        uses: actions/cache@v4
        with:
          path: |
            ~/.choosenim
            ~/.nimble
          key: 'nimcaches_${{ matrix.os }}_${{ matrix.nim-version }}'
      - uses: jdx/mise-action@v2
      - uses: jiro4989/setup-nim-action@v2
        with:
          nim-version: '${{ matrix.nim-version }}'
      - name: 'Configure workspace'
        run: |
          nimble build -Y
          uv sync --frozen
      - name: 'Run tests'
        run: |
          uv run pytest
  doctest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: jdx/mise-action@v2
      - name: Configure venv
        run: |
          uv sync --frozen --no-dev
      - name: Build document
        run: |
          task --yes docs:build-linkcheck docs:build-dirhtml
